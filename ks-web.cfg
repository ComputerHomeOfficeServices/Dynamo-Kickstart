#version=DEVEL
# System authorization information
auth --enableshadow --passalgo=sha512

%include /run/install/repo/ks-inc-install.cfg

# Use graphical install
graphical
# Run the Setup Agent on first boot
firstboot --enable

# Setup groups useful to your installation
#group --name=some_group --gid=2001
%include /run/install/repo/ks-inc-groups.cfg

ignoredisk --only-use=sda
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

# Network information
network  --bootproto=dhcp --device=enp0s3 --ipv6=auto --activate
network  --hostname=web.localdomain

# Root password
%include /run/install/repo/ks-inc-root.cfg

# System services
services --disabled="chronyd"
# System timezone
timezone America/Chicago --isUtc --nontp

#
# Setup local users here
#
%include /run/install/repo/ks-inc-users.cfg

# System bootloader configuration
bootloader --append=" crashkernel=auto" --location=mbr --boot-drive=sda
# Partition clearing information
clearpart --all --initlabel --drives=sda

# Disk partitioning information : ~25 GiB
%include /run/install/repo/ks-inc-partition_25.cfg

%packages
@^web-server-environment
@backup-client
@base
@core
@directory-client
@guest-agents
@hardware-monitoring
#@load-balancer	# load balancing servers
#@java-platform	# for Java-platform capabilities (beyond Java Servlet support)
@mariadb-client
@network-file-system-client
@performance
#@perl-web	# for perl-based web servers
@php
#@python-web	#for python-based web servers
@postgresql-client
@remote-system-management
@security-tools
@web-server
#@web-servlet	# for Java Servlet support
aide
kexec-tools
openscap
openscap-scanner
scap-security-guide
-telnet
-telnet-server

%end

%addon org_fedora_oscap
    content-type = scap-security-guide
    profile = rht-ccp
%end

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
%end

%post --log=/var/log/kickstart_post.log
#%include /run/install/repo/ks-inc-postinstall.cfg

#
# Add WordPress Command Line Interface (wp-cli) to system; we might use it.
#
curl -o /usr/local/bin/wp https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
curl -o /usr/local/bin/wp-completion.bash https://raw.githubusercontent.com/wp-cli/wp-cli/v1.5.1/utils/wp-completion.bash
chmod 750 /usr/local/bin/wp /usr/local/bin/wp-completion.bash

#
# Add sample WP-CLI configuration.  This will need to be customized later.
#
mkdir /root/.wp-cli
chmod 750 /root/.wp-cli
echo "# Global parameter defaults
path: wp-core
url: http://example.com
user: admin
color: false
disabled_commands:
  - db drop
  - plugin install
require:
  - path-to/command.php

# Subcommand defaults (e.g. `wp config create`)
config create:
    dbuser: root
    dbpass: 
    extra-php: |
        define( 'WP_DEBUG', true );
        define( 'WP_POST_REVISIONS', 50 );

# Aliases to other WordPress installs (e.g. `wp @staging rewrite flush`)
# An alias can include 'user', 'url', 'path', 'ssh', or 'http'
@staging:
    ssh: wpcli@staging.wp-cli.org
    user: wpcli
    path: /srv/www/staging.wp-cli.org
@production:
    ssh: wpcli@wp-cli.org:2222
    user: wpcli
    path: /srv/www/wp-cli.org

# Aliases can reference other aliases to create alias groups
# Alias groups can be nested
@both:
 - @staging
 - @production

# '_' is a special value denoting configuration options for this wp-cli.yml
_:
    # Merge subcommand defaults from the upstream config.yml, instead of overriding
    merge: true
    # Inherit configuration from an arbitrary YAML file
    inherit: prod.yml
" > /root/.wp-cli/config.yml
chmod 750 /root/.wp-cli/config.yml


echo "Installation Completed" > /tmp/install.out
date >> /tmp/install.out
%end
